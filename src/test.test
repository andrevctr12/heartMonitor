#include <Arduino.h>

/******************************************************************************
Heart_Rate_Display.ino
Demo Program for AD8232 Heart Rate sensor.
Casey Kuhns @ SparkFun Electronics
6/27/2014
https://github.com/sparkfun/AD8232_Heart_Rate_Monitor
The AD8232 Heart Rate sensor is a low cost EKG/ECG sensor.  This example shows
how to create an ECG with real time display.  The display is using Processing.
This sketch is based heavily on the Graphing Tutorial provided in the Arduino
IDE. http://www.arduino.cc/en/Tutorial/Graph
Resources:
This program requires a Processing sketch to view the data in real time.
Development environment specifics:
	IDE: Arduino 1.0.5
	Hardware Platform: Arduino Pro 3.3V/8MHz
	AD8232 Heart Monitor Version: 1.0
This code is beerware. If you see me (or any other SparkFun employee) at the
local pub, and you've found our code helpful, please buy us a round!
Distributed as-is; no warranty is given.
******************************************************************************/

const int LEADS_OFF_PLUS_PIN = D1;  // the number of the LO+ pin (digital) => D1
const int LEADS_OFF_MINUS_PIN = D2; // the number of the LO- pin (digital) => D2
const int LED_PIN = LED_BUILTIN;    // the number of the LED pin (digital)

void setup()
{
    // initialize the serial communication:
    Serial.begin(9600);
    pinMode(LEADS_OFF_PLUS_PIN, INPUT);  // Setup for leads off detection LO +
    pinMode(LEADS_OFF_MINUS_PIN, INPUT); // Setup for leads off detection LO -
    pinMode(LED_PIN, OUTPUT);
    digitalWrite(LED_PIN, HIGH);
}
int count = 0;

// the loop function runs over and over again forever
void loop_a()
{
    digitalWrite(LED_BUILTIN, LOW);  // Turn the LED on (Note that LOW is the voltage level
                                     // but actually the LED is on; this is because
                                     // it is acive low on the ESP-01)
    delay(10);                       // Wait for a second
    digitalWrite(LED_BUILTIN, HIGH); // Turn the LED off by making the voltage HIGH
    Serial.println(count);
    count++;
    delay(1000); // Wait for two seconds (to demonstrate the active low LED)
}

void loop()
{
    digitalWrite(LED_BUILTIN, LOW);
    if ((digitalRead(LEADS_OFF_PLUS_PIN) == 1) || (digitalRead(LEADS_OFF_MINUS_PIN) == 1))
    {
        Serial.println('!');
        digitalWrite(LED_BUILTIN, HIGH);
        delay(1000);
    }
    else
    {
        //send the value of analog input 0:
        Serial.println(analogRead(A0));
    }
    //Wait for a bit to keep serial data from saturating
    delay(1);
}